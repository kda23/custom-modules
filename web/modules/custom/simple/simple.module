<?php
use Drupal\Component\Utility\Timer;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Logger;
use Drupal\user;
use Drupal\Core\Block\BlockBase;
use Drupal\Core\Mail\MailManagerInterface;
use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_page().
 */
function simple_preprocess_page(&$type) {
    $userPermissionWatchTime = \Drupal::currentUser()->hasPermission('Watch generation time permissions');
    if ($userPermissionWatchTime == true) {
        $execTimeSecond = Timer::read('test') / 1000;
        drupal_set_message("Load time $execTimeSecond");
    }
    //Attached alert to page
//    if (isset($type['page'])) {
//        $test = 'Some string';
//        $test['#attached']['library'][] = 'simple/bootstrap'
//        $type['page']['content']['#attached']['library'][] = 'simple/custom';
//        $type['#attached']['drupalSettings']['simple']['custom']['var'] = $test;
//    }
}

//Form hooks section

/**
 * Implements hook_form_user_register_form_alter().
 */
function simple_form_user_register_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    //Add wrapper
    $form['#prefix'] = "<div class='simple-form-module'";
    $form['#suffix'] = "</div>";
    //Field message for admin
    $form['massage'] = [
        '#type' => 'textfield',
        '#title' => t('Message for administration'),
        '#required' => FALSE,
    ];
    //Permissions field
    $form['selected'] = array(
        '#type' => 'select',
        '#title' => t('Permissions'),
        '#options' => [
            'Anonymous' => 'Anonymous user',
            'Authenticated' => 'Authenticated user',
            'Admin' => 'Administrator',
        ],
        '#description' => t('Set this to <em>Yes</em> if you would like this category to be selected by default.'),
    );
    $form['actions']['submit']['#submit'][] = 'simple_form_submit';
    //Form template alter
//    $form['#theme'] = 'simple_user_register_form';
}

/**
 * Implements hook_form_submit() for register form.
 */
function simple_form_submit(&$form, FormStateInterface $form_state){
    $values = $form_state->getValues();
    Drupal::logger('simple')->debug($values['massage']);
    Drupal::logger('simple')->debug($values['selected']);
    Drupal::logger('simple')->debug($values['pass']);
    Drupal::logger('simple')->debug($values['name']);
}

//Section for alter register form, define teamplete for controller and route
/**
 * Implements hook_form_alter() for register form.
 */
function simple_form_alter(&$form, FormStateInterface $form_state, $form_id) {
    if($form_id == 'user_register_form') {
        $form['#theme'] = 'simple_user_register_form';
    }
}

 /**
  * Implements hook_theme() for register form.
  */
//function simple_theme($existing, $type, $theme, $path) {
//    return [
//        'simple_user_register_form' => [
//            'render element' => 'form',
//            'path' => drupal_get_path('module', 'simple') . '/templates',
//        ],
//        'article_list' => [
//            'variables' => [
//                'items' => [],
//                'title' => ''
//            ]
//        ],
//    ];
//}

/**
 * Implements hook_page_attachments()
 */
function simple_page_attachments(&$attachments) {
    $test = 'Some string';
    $attachments['#attached']['library'][] = 'simple/bootstrap';
    $attachments['#attached']['library'][] = 'simple/custom';
    $attachments['#attached']['drupalSettings']['simple']['custom']['var'] = $test;
}

//Mail Setting Block
/**
* Implements hook_user_login().
*/
function simple_user_login($account) {
    $date = date('d-m-Y H:i:s ');
    $userName = $account->getUsername();
    $mailManager = \Drupal::service('plugin.manager.mail');
    $module = "simple";
    $key = "simple_user_login";
    $to = "kruglov.denis3@gmail.com";
    $params['message'] = "User $userName has been loggened at $date";
    $params['title'] = 'Test title';
    $langcode = \Drupal::currentUser()->getPreferredLangcode();
    $send = true;
    $result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
    if ($result['result'] == false) {
        Drupal::logger('simple')->debug("User $userName has been authenticated. Letter was not sent to $to $date");
    }
    else {
        Drupal::logger('simple')->debug("User $userName has been authenticated. Letter was sent to $to $date");
    }
}

/**
 * Implements hook_mail().
 */
function simple_mail($key, &$message, $params) {
    $options = [
        'langcode' => $message['langcode'],
    ];
    switch ($key) {
        case 'simple_user_login':
            $message['from'] = \Drupal::config('system.site')->get('mail');
            $message['subject'] = t('Your mail subject Here: @title', array('@title' => $params['title']), $options);
            $message['body'][] = Html::escape($params['message']);
            break;
    }
}
//Info hooks section

///**
// * Implements hook_hook_info().
// */
//function simple_hook_info() {
//    $hooks = [
//        'simple_form_user_login_form_alter',
//        'simple_login_submit_handler',
//    ];
//    return array_fill_keys($hooks, ['group' => 'tokens']);
//}

//function simple_handler_test_hook_info() {
//    return array(
//        'hook' => array(
//            'group' => 'tokens',
//        ),
//    );
//}
//function simple_handler_test_hook($arg) {
//    return $arg;
//}
